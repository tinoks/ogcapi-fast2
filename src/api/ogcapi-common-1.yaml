openapi: 3.0.2

info:
  title: OGCAPI
  version: 0.0.1
  description: Implemations of OGC API
  contact:
    email: kortxyz@gmail.com

tags:
  - name: Capabilities
    description: essential characteristics of this API


servers:
  - url: "https://localhost"

paths:
  /:
    get:
      operationId: getLandingpage
      tags:
        - Capabilities
      summary: get Landingpage
      description: First place a user would normally hit
      parameters:
        - $ref: "#/components/parameters/fCommon"
      responses:
        "200":
          description: Landingpage of the API
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/landingpage"
            html/text:
              schema:
                $ref: "#/components/schemas/htmlSchema"
        "400":
          description: The server cannot or will not process the request due to an apparent client error. For example, a query parameter had an incorrect value.


  /conformance:
    get:
      operationId: getConformance
      tags:
        - Capabilities
      summary: conformance declaration
      description: >-
        The URIs of all conformance classes supported by the server. This
        information is provided to support 'generic' clients that want to access
        multiple OGC API implementations - and not 'just' a specific API. For
        clients accessing only a single API, this information is in general not
        relevant and the OpenAPI definition details the required information
        about the API.
      parameters:
        - $ref: "#/components/parameters/fCommon"
      responses:
        "200":
          description: The operation was executed successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/confClasses"
            text/html:
              schema:
                $ref: "#/components/schemas/htmlSchema"


  /api:
    get:
      operationId: getAPI
      tags:
        - Capabilities
      summary: get API description
      description: >-
        Description of the API.
      parameters:
      - $ref: "#/components/parameters/fCommon"
      responses:
        "200":
          description: The operation was executed successfully.


  /collections:
    get:
      operationId: getCollections
      tags:
        - Capabilities
      summary: get collections
      description: Show an overview of collections available in the dataset.
      parameters:
        - $ref: "#/components/parameters/fCommon"
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/offset"
        - $ref: "#/components/parameters/bbox"
      responses:
        "200":
          description: Collections in the API
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/collections"
            html/text:
              schema:
                $ref: "#/components/schemas/htmlSchema"

  /collections/{collectionId}:
    get:
      operationId: getCollection
      tags:
        - Capabilities
      summary: get collection metadata
      description: Show details about a collection available in the dataset.
      parameters:
        - $ref: "#/components/parameters/fCommon"
        - $ref: "#/components/parameters/collectionId"
      responses:
        "200":
          description: collections metadata
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/collection"

components:
  parameters:
    fCommon:
      name: f
      in: query
      description: >-
        Select the output format of the response. If no value is provided, the
        standard HTTP rules apply, i.e., the accept header will be used to
        determine the format.
      required: false
      schema:
        type: string
        enum:
          - json
          - html

    collectionId:
      name: collectionId
      in: path
      description: local identifier of a collection
      required: true
      schema:
        type: string

    query:
      name: q
      in: query
      description: filter collections based on a string. Query check for match in name, description
      required: false
      schema:
        type: string

    keywords:
      name: keywords
      in: query
      description: filter collections based on keywords. Mulitple keywords are seperated by comma. 
      required: false
      schema:
        type: string

    limit:
      name: limit
      in: query
      description: >-
        The optional limit parameter limits the number of items that are
        presented in the response document.


        Only items are counted that are on the first level of the collection in
        the response document.

        Nested objects contained within the explicitly requested items shall not
        be counted.
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 999999
        default: 10
      style: form
      explode: false

    offset:
      name: offset
      in: query
      description: >-
        The optional offset parameter offset the number of items that are
        presented in the response document.
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 999999
        default: 0

    bbox:
      name: bbox
      in: query
      description: filter on spatial bounds
      required: false
      schema:
        type: array
        minItems: 4
        maxItems: 6
        items:
          type: number
      style: form
      explode: false

  schemas:
    confClasses:
      type: object
      required:
        - conformsTo
      properties:
        conformsTo:
          type: array
          items:
            type: string

    htmlSchema:
      type: string
      example: <html>...</html>

    landingpage:
      type: object
      required:
        - links
      properties:
        title:
          type: string
          example: Buildings in Bonn
        description:
          type: string
          example: Access to data about buildings in the city of Bonn via a Web API that conforms to the OGC API Features specification.
        links:
          type: array
          items:
            $ref: "#/components/schemas/link"

    link:
      required:
        - href
        - rel
        - type
      type: object
      properties:
        rel:
          type: string
        type:
          type: string
        title:
          type: string
        href:
          type: string
        templated:
          type: boolean

    collections:
      type: object
      required:
        - links
        - collections
      properties:
        links:
          type: array
          items:
            $ref: "#/components/schemas/link"
        collections:
          type: array
          items:
            $ref: "#/components/schemas/collection"

    collection:
      type: object
      required:
        - id
        - links
        - extent
      properties:
        id:
          description: identifier of the collection used, for example, in URIs
          type: string
        title:
          description: human readable title of the collection
          type: string
        description:
          description: a description of the features in the collection
          type: string
        links:
          type: array
          items:
            $ref: "#/components/schemas/link"
        extent:
          description: >-
            The extent of the features in the collection. In the Core only spatial and temporal
            extents are specified. Extensions may add additional members to represent other
            extents, for example, thermal or pressure ranges.
          type: object
          properties:
            spatial:
              description: >-
                The spatial extent of the features in the collection.
              type: object
              properties:
                bbox:
                  description: >-
                    One or more bounding boxes that describe the spatial extent of the dataset.
                    In the Core only a single bounding box is supported. Extensions may support
                    additional areas. If multiple areas are provided, the union of the bounding
                    boxes describes the spatial extent.
                  type: array
                  minItems: 1
                  items:
                    description: >-
                      Each bounding box is provided as four or six numbers, depending on
                      whether the coordinate reference system includes a vertical axis
                      (height or depth):

                      * Lower left corner, coordinate axis 1
                      * Lower left corner, coordinate axis 2
                      * Minimum value, coordinate axis 3 (optional)
                      * Upper right corner, coordinate axis 1
                      * Upper right corner, coordinate axis 2
                      * Maximum value, coordinate axis 3 (optional)

                      The coordinate reference system of the values is WGS 84 longitude/latitude
                      (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate
                      reference system is specified in `crs`.

                      For WGS 84 longitude/latitude the values are in most cases the sequence of
                      minimum longitude, minimum latitude, maximum longitude and maximum latitude.
                      However, in cases where the box spans the antimeridian the first value
                      (west-most box edge) is larger than the third value (east-most box edge).

                      If the vertical axis is included, the third and the sixth number are
                      the bottom and the top of the 3-dimensional bounding box.

                      If a feature has multiple spatial geometry properties, it is the decision of the
                      server whether only a single spatial geometry property is used to determine
                      the extent or all relevant geometries.
                    type: array
                    minItems: 4
                    maxItems: 6
                    items:
                      type: number
                    example:
                      - -180
                      - -90
                      - 180
                      - 90
                crs:
                  description: >-
                    Coordinate reference system of the coordinates in the spatial extent
                    (property `bbox`). The default reference system is WGS 84 longitude/latitude.
                    In the Core this is the only supported coordinate reference system.
                    Extensions may support additional coordinate reference systems and add
                    additional enum values.
                  type: string
                  enum:
                    - 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
                  default: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
            temporal:
              description: >-
                The temporal extent of the features in the collection.
              type: object
              properties:
                interval:
                  description: >-
                    One or more time intervals that describe the temporal extent of the dataset.
                    The value `null` is supported and indicates an open time intervall.
                    In the Core only a single time interval is supported. Extensions may support
                    multiple intervals. If multiple intervals are provided, the union of the
                    intervals describes the temporal extent.
                  type: array
                  minItems: 1
                  items:
                    description: >-
                      Begin and end times of the time interval. The timestamps
                      are in the coordinate reference system specified in `trs`. By default
                      this is the Gregorian calendar.
                    type: array
                    minItems: 2
                    maxItems: 2
                    items:
                      type: string
                      format: date-time
                      nullable: true
                    example:
                      - '2011-11-11T12:22:11Z'
                      - null
                trs:
                  description: >-
                    Coordinate reference system of the coordinates in the temporal extent
                    (property `interval`). The default reference system is the Gregorian calendar.
                    In the Core this is the only supported temporal reference system.
                    Extensions may support additional temporal reference systems and add
                    additional enum values.
                  type: string
                  enum:
                    - 'http://www.opengis.net/def/uom/ISO-8601/0/Gregorian'
                  default: 'http://www.opengis.net/def/uom/ISO-8601/0/Gregorian'
        itemType:
          description: indicator about the type of the items in the collection (the default value is 'feature').
          type: string
          default: feature
        crs:
          description: the list of coordinate reference systems supported by the service
          type: array
          items:
            type: string
          default:
            - http://www.opengis.net/def/crs/OGC/1.3/CRS84


  responses:
    error:
      description: tets
      content:
        application/json:
          schema:
            type: string
